//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Protocols_ProtoIDWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Protocols.ProtoID), typeof(System.Object));
		L.RegFunction("GetModuleID", GetModuleID);
		L.RegFunction("ToString", ToString);
		L.RegFunction("ToUInt16", ToUInt16);
		L.RegFunction("Equals", Equals);
		L.RegFunction("GetHashCode", GetHashCode);
		L.RegFunction("GetProtoIDByBody", GetProtoIDByBody);
		L.RegFunction("Init", Init);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("CMD_STATIC_NULL", get_CMD_STATIC_NULL, null);
		L.RegVar("CMD_SERVER_CONNECTED", get_CMD_SERVER_CONNECTED, null);
		L.RegVar("CMD_SERVER_DISCONNECTED", get_CMD_SERVER_DISCONNECTED, null);
		L.RegVar("CMD_TEST", get_CMD_TEST, null);
		L.RegVar("ID", get_ID, null);
		L.RegVar("Name", get_Name, null);
		L.RegVar("BodyType", get_BodyType, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetModuleID(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Protocols.ProtoID obj = (Protocols.ProtoID)ToLua.CheckObject<Protocols.ProtoID>(L, 1);
			byte o = obj.GetModuleID();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ToString(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Protocols.ProtoID obj = (Protocols.ProtoID)ToLua.CheckObject<Protocols.ProtoID>(L, 1);
			string o = obj.ToString();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ToUInt16(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Protocols.ProtoID obj = (Protocols.ProtoID)ToLua.CheckObject<Protocols.ProtoID>(L, 1);
			ushort o = obj.ToUInt16();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Equals(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Protocols.ProtoID obj = (Protocols.ProtoID)ToLua.CheckObject<Protocols.ProtoID>(L, 1);
			object arg0 = ToLua.ToVarObject(L, 2);
			bool o = obj != null ? obj.Equals(arg0) : arg0 == null;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetHashCode(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Protocols.ProtoID obj = (Protocols.ProtoID)ToLua.CheckObject<Protocols.ProtoID>(L, 1);
			int o = obj.GetHashCode();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetProtoIDByBody(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Protocols.ProtoBody arg0 = (Protocols.ProtoBody)ToLua.CheckObject<Protocols.ProtoBody>(L, 1);
			Protocols.ProtoID o = Protocols.ProtoID.GetProtoIDByBody(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			Protocols.ProtoID.Init();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CMD_STATIC_NULL(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, Protocols.ProtoID.CMD_STATIC_NULL);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CMD_SERVER_CONNECTED(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, Protocols.ProtoID.CMD_SERVER_CONNECTED);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CMD_SERVER_DISCONNECTED(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, Protocols.ProtoID.CMD_SERVER_DISCONNECTED);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CMD_TEST(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, Protocols.ProtoID.CMD_TEST);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Protocols.ProtoID obj = (Protocols.ProtoID)o;
			ushort ret = obj.ID;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ID on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Name(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Protocols.ProtoID obj = (Protocols.ProtoID)o;
			string ret = obj.Name;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Name on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BodyType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Protocols.ProtoID obj = (Protocols.ProtoID)o;
			System.Type ret = obj.BodyType;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index BodyType on a nil value");
		}
	}
}

